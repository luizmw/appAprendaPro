/*cadastro
    -1º nome
    -2º nome
    -email (user)
    -password
    -//restringe se for administrador através do dominio do email
    //todos os campos obrigatórios
*/

/*classe usuario
  -molde para o objeto usuario, cujos atributos de 1 e 2 nome, email e password serao definidos no momento do cadastro - através de funções
  //deve conter metodos como adicionar novo usuario, editar usuario, (a nivel de adm: listar usuarios e remover usuarios), verificar se um email a ser cadastrado já nao está linkado a outra conta, remover/excluir a própria conta(usuario comum)
  campos adicionais:
    -pontuação;
    -progresso (algo como, modulo 1 ok, a porcentagem de acertos,...)
 */

/*List / map
  -para salvar os usuarios (objetos instanciados a cada cadastro), talvez uma coleção para adm e outra para user, ou unica (dferenciando adm de user atraves do dominio de email)
 */

/*login:
    -ao submeter o login, percorre a lista verificando se email e senha estao cadastrados,
    -entra na tela home
 */

/* Perfil
  Crud: foto, nome(1º e 2º), email, senha
  ações de editar e remover os dados devem ser modificados na coleção, no objeto que representa o usuario logado.
 */

/*administrador
  -postar novas perguntas
  -ver e editar perguntas existentes
  -remover pergntas
  -remover um usuario (caso de inatividade)
  -jogar //para testar as modificações
 */

/*Coleção de questoes
  - criar uma coleção/list para armazenar as questoes
   */


===========
//trabalhando com alertDialog
// https://www.macoratti.net/19/06/flut_alertdi1.htm
// void exibirDialogo(BuildContext context) {
//   showDialog(
//     context: context,
//     builder: (BuildContext context) { //context deve ser passado na chamada principal
//       return AlertDialog(  title: new Text("Alert Dialog titulo"),
//           content: new Text("Alert Dialog body"),);
//     },
//   );
// }

=======
//editar da tela de Perfil
//https://www.youtube.com/watch?v=A80bZCnjtpY&ab_channel=GabrielVaz 